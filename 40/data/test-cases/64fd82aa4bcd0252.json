{
  "uid" : "64fd82aa4bcd0252",
  "name" : "Авторизация под не существующим пользователем",
  "fullName" : "test.test_auth.TestNegativeScenario#test_login_by_not_exist_user",
  "historyId" : "7bd12753fff2701f4e63fd7bfc86668a",
  "time" : {
    "start" : 1750734769905,
    "stop" : 1750734769905,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55a6c1a8ac9a <unknown>\n#1 0x55a6c15306e0 <unknown>\n#2 0x55a6c156b0b2 <unknown>\n#3 0x55a6c156624f <unknown>\n#4 0x55a6c15b68b6 <unknown>\n#5 0x55a6c15b5f76 <unknown>\n#6 0x55a6c15a7c03 <unknown>\n#7 0x55a6c157447b <unknown>\n#8 0x55a6c15750e1 <unknown>\n#9 0x55a6c1a4f44b <unknown>\n#10 0x55a6c1a5337f <unknown>\n#11 0x55a6c1a36f89 <unknown>\n#12 0x55a6c1a53f18 <unknown>\n#13 0x55a6c1a1b6df <unknown>\n#14 0x55a6c1a78308 <unknown>\n#15 0x55a6c1a784e6 <unknown>\n#16 0x55a6c1a89b76 <unknown>\n#17 0x7fc45909caa4 <unknown>\n#18 0x7fc459129c3c <unknown>",
  "statusTrace" : "self = <test.test_auth.TestNegativeScenario object at 0x7f7796ba7e00>\n\n    @pytest.fixture(scope=\"class\")\n    def browser(self) -> Generator[Niffler, Any, None]:\n        options = Options()\n        options.add_argument(\"--lang=en\")\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--incognito\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n>       wd = webdriver.Chrome(options=options)\n\ntest/test_auth.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:250: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:342: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f77961dc6e0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: probably user data d...\\\\n#16 0x55a6c1a89b76 \\\\u003Cunknown>\\\\n#17 0x7fc45909caa4 \\\\u003Cunknown>\\\\n#18 0x7fc459129c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nE       Stacktrace:\nE       #0 0x55a6c1a8ac9a <unknown>\nE       #1 0x55a6c15306e0 <unknown>\nE       #2 0x55a6c156b0b2 <unknown>\nE       #3 0x55a6c156624f <unknown>\nE       #4 0x55a6c15b68b6 <unknown>\nE       #5 0x55a6c15b5f76 <unknown>\nE       #6 0x55a6c15a7c03 <unknown>\nE       #7 0x55a6c157447b <unknown>\nE       #8 0x55a6c15750e1 <unknown>\nE       #9 0x55a6c1a4f44b <unknown>\nE       #10 0x55a6c1a5337f <unknown>\nE       #11 0x55a6c1a36f89 <unknown>\nE       #12 0x55a6c1a53f18 <unknown>\nE       #13 0x55a6c1a1b6df <unknown>\nE       #14 0x55a6c1a78308 <unknown>\nE       #15 0x55a6c1a784e6 <unknown>\nE       #16 0x55a6c1a89b76 <unknown>\nE       #17 0x7fc45909caa4 <unknown>\nE       #18 0x7fc459129c3c <unknown>\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "[S]  Session Faker",
    "time" : {
      "start" : 1750734763200,
      "stop" : 1750734763202,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] App User",
    "time" : {
      "start" : 1750734763202,
      "stop" : 1750734764051,
      "duration" : 849
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Создать пользователя 'qa_guru'",
      "time" : {
        "start" : 1750734763203,
        "stop" : 1750734764050,
        "duration" : 847
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user_name",
        "value" : "'qa_guru'"
      }, {
        "name" : "user_password",
        "value" : "'qa_guru'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Envs",
    "time" : {
      "start" : 1750734763202,
      "stop" : 1750734763202,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[C] Browser",
    "time" : {
      "start" : 1750734768084,
      "stop" : 1750734769775,
      "duration" : 1691
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: probably user data directory is already in use, please specify a unique value for --user-data-dir argument, or don't use --user-data-dir\nStacktrace:\n#0 0x55a6c1a8ac9a <unknown>\n#1 0x55a6c15306e0 <unknown>\n#2 0x55a6c156b0b2 <unknown>\n#3 0x55a6c156624f <unknown>\n#4 0x55a6c15b68b6 <unknown>\n#5 0x55a6c15b5f76 <unknown>\n#6 0x55a6c15a7c03 <unknown>\n#7 0x55a6c157447b <unknown>\n#8 0x55a6c15750e1 <unknown>\n#9 0x55a6c1a4f44b <unknown>\n#10 0x55a6c1a5337f <unknown>\n#11 0x55a6c1a36f89 <unknown>\n#12 0x55a6c1a53f18 <unknown>\n#13 0x55a6c1a1b6df <unknown>\n#14 0x55a6c1a78308 <unknown>\n#15 0x55a6c1a784e6 <unknown>\n#16 0x55a6c1a89b76 <unknown>\n#17 0x7fc45909caa4 <unknown>\n#18 0x7fc459129c3c <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/niffler-py-st3/niffler-py-st3/python_test/test/test_auth.py\", line 69, in browser\n    wd = webdriver.Chrome(options=options)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n    ~~~~~~~~~~~~~~~~^\n        browser_name=DesiredCapabilities.CHROME[\"browserName\"],\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n        keep_alive=keep_alive,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 250, in __init__\n    self.start_session(capabilities)\n    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 342, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Негативные сценарии"
  }, {
    "name" : "feature",
    "value" : "Авторизация пользователя"
  }, {
    "name" : "epic",
    "value" : "Приложение Niffler"
  }, {
    "name" : "host",
    "value" : "fv-az1372-452"
  }, {
    "name" : "thread",
    "value" : "6871-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_auth"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 9,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "9b8e060e7ac3ce41",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/39/#testresult/9b8e060e7ac3ce41",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750733808341,
          "stop" : 1750733808986,
          "duration" : 645
        }
      }, {
        "uid" : "9d1ebbe0060c106a",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/38/#testresult/9d1ebbe0060c106a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750733435446,
          "stop" : 1750733436061,
          "duration" : 615
        }
      }, {
        "uid" : "687c16a3adae8f19",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/37/#testresult/687c16a3adae8f19",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750677125652,
          "stop" : 1750677126276,
          "duration" : 624
        }
      }, {
        "uid" : "64c88cf6b96b3f27",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/36/#testresult/64c88cf6b96b3f27",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750676763046,
          "stop" : 1750676764308,
          "duration" : 1262
        }
      }, {
        "uid" : "51d99b53ea613723",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/35/#testresult/51d99b53ea613723",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750672834966,
          "stop" : 1750672835940,
          "duration" : 974
        }
      }, {
        "uid" : "917f8090608fb056",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/34/#testresult/917f8090608fb056",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750672138424,
          "stop" : 1750672139643,
          "duration" : 1219
        }
      }, {
        "uid" : "e2adcf13b2805474",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/33/#testresult/e2adcf13b2805474",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750671177155,
          "stop" : 1750671178447,
          "duration" : 1292
        }
      }, {
        "uid" : "65527bb90edb7186",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/32/#testresult/65527bb90edb7186",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750670907184,
          "stop" : 1750670908517,
          "duration" : 1333
        }
      }, {
        "uid" : "15383f3f390f86d6",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/31/#testresult/15383f3f390f86d6",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Bad credentials' == 'Неверные уче... пользователя'\n  \n  - Неверные учетные данные пользователя\n  + Bad credentials",
        "time" : {
          "start" : 1750670595948,
          "stop" : 1750670596828,
          "duration" : 880
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "64fd82aa4bcd0252.json",
  "parameterValues" : [ ]
}