{
  "uid" : "2476e181ef0c9ff5",
  "name" : "Поиск трат по дате",
  "fullName" : "test.test_app.TestSearch#test_search_by_date",
  "historyId" : "751859e68dae90ea11b5030340fbbd9d",
  "time" : {
    "start" : 1750648714031,
    "stop" : 1750648725161,
    "duration" : 11130
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <test.test_app.TestSearch object at 0x7f9650397bf0>\nniffler = <python_test.model.niffler.Niffler object at 0x7f96501ccc20>\ndate_period = 'last_month', expected_length = 7\n\n    @pytest.mark.parametrize('date_period, expected_length', [\n        ('last_month', 7),\n        ('today', 6),\n    ])\n    @allure.story(Story.search_criteria)\n    @allure.title('Поиск трат по дате')\n    def test_search_by_date(self, niffler: Niffler, date_period: str, expected_length: int):\n        niffler.main_page.go_to_niffler()\n        count_before = niffler.main_page.get_count_spending_on_main_page()\n    \n        niffler.main_page.search_spending(category='', period=date_period)\n>       niffler.main_page.wait_while_counts_spending_not_equal(count_before)\n\ntest/test_app.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodel/MainPage.py:89: in wait_while_counts_spending_not_equal\n    self.wait_while_len_elements_not_equal(self.LIST_SPENDINGS, value, timeout)\nmodel/BasePage.py:39: in wait_while_len_elements_not_equal\n    WebDriverWait(self.wd, timeout).until(lambda d: len(d.find_elements(*locator)) != value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"334ad91eb5b68eef656c201e64bf7102\")>\nmethod = <function BasePage.wait_while_len_elements_not_equal.<locals>.<lambda> at 0x7f965001aa20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "[S]  Session Faker",
    "time" : {
      "start" : 1750648693741,
      "stop" : 1750648693770,
      "duration" : 29
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[M] Web Driver",
    "time" : {
      "start" : 1750648694062,
      "stop" : 1750648698443,
      "duration" : 4381
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S] App User",
    "time" : {
      "start" : 1750648693770,
      "stop" : 1750648693869,
      "duration" : 99
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Создать пользователя 'qa_guru'",
      "time" : {
        "start" : 1750648693771,
        "stop" : 1750648693869,
        "duration" : 98
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user_name",
        "value" : "'qa_guru'"
      }, {
        "name" : "user_password",
        "value" : "'qa_guru'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Envs",
    "time" : {
      "start" : 1750648693770,
      "stop" : 1750648693770,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[M] Niffler",
    "time" : {
      "start" : 1750648698443,
      "stop" : 1750648701150,
      "duration" : 2707
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Перейти на страницу авторизации Niffler",
      "time" : {
        "start" : 1750648698443,
        "stop" : 1750648699377,
        "duration" : 934
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Авторизоваться под пользователем",
      "time" : {
        "start" : 1750648699377,
        "stop" : 1750648700091,
        "duration" : 714
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Заполнить поле \"Имя пользователя\"",
        "time" : {
          "start" : 1750648699377,
          "stop" : 1750648699583,
          "duration" : 206
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "user_name",
          "value" : "'qa_guru'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле \"Пароль\"",
        "time" : {
          "start" : 1750648699584,
          "stop" : 1750648699722,
          "duration" : 138
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "password",
          "value" : "'qa_guru'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Нажать кнопку \"Log In\"",
        "time" : {
          "start" : 1750648699723,
          "stop" : 1750648700091,
          "duration" : 368
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user_name",
        "value" : "'qa_guru'"
      }, {
        "name" : "password",
        "value" : "'qa_guru'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <test.test_app.TestSearch object at 0x7f9650397bf0>\nniffler = <python_test.model.niffler.Niffler object at 0x7f96501ccc20>\ndate_period = 'last_month', expected_length = 7\n\n    @pytest.mark.parametrize('date_period, expected_length', [\n        ('last_month', 7),\n        ('today', 6),\n    ])\n    @allure.story(Story.search_criteria)\n    @allure.title('Поиск трат по дате')\n    def test_search_by_date(self, niffler: Niffler, date_period: str, expected_length: int):\n        niffler.main_page.go_to_niffler()\n        count_before = niffler.main_page.get_count_spending_on_main_page()\n    \n        niffler.main_page.search_spending(category='', period=date_period)\n>       niffler.main_page.wait_while_counts_spending_not_equal(count_before)\n\ntest/test_app.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodel/MainPage.py:89: in wait_while_counts_spending_not_equal\n    self.wait_while_len_elements_not_equal(self.LIST_SPENDINGS, value, timeout)\nmodel/BasePage.py:39: in wait_while_len_elements_not_equal\n    WebDriverWait(self.wd, timeout).until(lambda d: len(d.find_elements(*locator)) != value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"334ad91eb5b68eef656c201e64bf7102\")>\nmethod = <function BasePage.wait_while_len_elements_not_equal.<locals>.<lambda> at 0x7f965001aa20>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException",
    "steps" : [ {
      "name" : "Перейти на главную страницу Niffler",
      "time" : {
        "start" : 1750648714031,
        "stop" : 1750648714600,
        "duration" : 569
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Получить количество трат на главной странице",
      "time" : {
        "start" : 1750648714600,
        "stop" : 1750648714608,
        "duration" : 8
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Выполнить поиск по заданным критериям",
      "time" : {
        "start" : 1750648714608,
        "stop" : 1750648714864,
        "duration" : 256
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Выбрать дату",
        "time" : {
          "start" : 1750648714609,
          "stop" : 1750648714748,
          "duration" : 139
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "date_period",
          "value" : "'last_month'"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Заполнить поле поиска",
        "time" : {
          "start" : 1750648714748,
          "stop" : 1750648714839,
          "duration" : 91
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "value",
          "value" : "''"
        } ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "Выполнить поиск",
        "time" : {
          "start" : 1750648714839,
          "stop" : 1750648714864,
          "duration" : 25
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "category",
        "value" : "''"
      }, {
        "name" : "period",
        "value" : "'last_month'"
      } ],
      "stepsCount" : 3,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 6,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "web_driver::0",
    "time" : {
      "start" : 1750648745177,
      "stop" : 1750648745265,
      "duration" : 88
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "niffler::0",
    "time" : {
      "start" : 1750648745176,
      "stop" : 1750648745176,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Поиск"
  }, {
    "name" : "epic",
    "value" : "Приложение Niffler"
  }, {
    "name" : "story",
    "value" : "Критерии поиска"
  }, {
    "name" : "host",
    "value" : "fv-az1068-91"
  }, {
    "name" : "thread",
    "value" : "10714-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_app"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "date_period",
    "value" : "'last_month'"
  }, {
    "name" : "expected_length",
    "value" : "7"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "2476e181ef0c9ff5.json",
  "parameterValues" : [ "'last_month'", "7" ]
}