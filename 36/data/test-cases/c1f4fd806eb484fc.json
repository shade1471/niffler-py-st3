{
  "uid" : "c1f4fd806eb484fc",
  "name" : "Наличие свойства required у полей имя пользователя и пароль",
  "fullName" : "test.test_auth.TestNegativeScenario#test_required_field",
  "historyId" : "a42991aca7d1494e84fb0dba166660b4",
  "time" : {
    "start" : 1750676764383,
    "stop" : 1750676764716,
    "duration" : 333
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0> = <python_test.model.niffler.Niffler object at 0x7f352d0b67b0>.login_page",
  "statusTrace" : "self = <test.test_auth.TestNegativeScenario object at 0x7f352d3bd590>\nbrowser = <python_test.model.niffler.Niffler object at 0x7f352d0b67b0>\nfield_name = 'user'\n\n    @allure.feature(Feature.log_in)\n    @allure.title('Наличие свойства required у полей имя пользователя и пароль')\n    @pytest.mark.parametrize('field_name', ['user', 'password'])\n    def test_required_field(self, browser: Niffler, field_name: str):\n        send_text_in_field = {'user': browser.login_page.fill_user_name, 'password': browser.login_page.fill_password}\n        element = {'user': LoginPage.USER_NAME_FIELD, 'password': LoginPage.PASSWORD_FIELD}\n        browser.login_page.go_to_niffler()\n    \n        el = browser.login_page.find_element(element[field_name])\n        assert el.get_attribute('required')\n    \n        send_text_in_field[field_name]('test')\n        browser.login_page.click_log_in()\n        element_with_message = next((el for el in element.keys() if el != field_name), None)\n    \n        with allure.step('Проверить текст о незаполненности поля'):\n>           assert browser.login_page.is_element_have_property(element[element_with_message], 'validationMessage',\n                                                               'Заполните это поле.')\nE           AssertionError: assert False\nE            +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\nE            +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0>.is_element_have_property\nE            +      where <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0> = <python_test.model.niffler.Niffler object at 0x7f352d0b67b0>.login_page\n\ntest/test_auth.py:101: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "[S] App User",
    "time" : {
      "start" : 1750676758461,
      "stop" : 1750676758637,
      "duration" : 176
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Создать пользователя 'qa_guru'",
      "time" : {
        "start" : 1750676758461,
        "stop" : 1750676758637,
        "duration" : 176
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user_name",
        "value" : "'qa_guru'"
      }, {
        "name" : "user_password",
        "value" : "'qa_guru'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  }, {
    "name" : "[S] Envs",
    "time" : {
      "start" : 1750676758460,
      "stop" : 1750676758461,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[S]  Session Faker",
    "time" : {
      "start" : 1750676758459,
      "stop" : 1750676758460,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "[C] Browser",
    "time" : {
      "start" : 1750676762282,
      "stop" : 1750676763045,
      "duration" : 763
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0> = <python_test.model.niffler.Niffler object at 0x7f352d0b67b0>.login_page",
    "statusTrace" : "self = <test.test_auth.TestNegativeScenario object at 0x7f352d3bd590>\nbrowser = <python_test.model.niffler.Niffler object at 0x7f352d0b67b0>\nfield_name = 'user'\n\n    @allure.feature(Feature.log_in)\n    @allure.title('Наличие свойства required у полей имя пользователя и пароль')\n    @pytest.mark.parametrize('field_name', ['user', 'password'])\n    def test_required_field(self, browser: Niffler, field_name: str):\n        send_text_in_field = {'user': browser.login_page.fill_user_name, 'password': browser.login_page.fill_password}\n        element = {'user': LoginPage.USER_NAME_FIELD, 'password': LoginPage.PASSWORD_FIELD}\n        browser.login_page.go_to_niffler()\n    \n        el = browser.login_page.find_element(element[field_name])\n        assert el.get_attribute('required')\n    \n        send_text_in_field[field_name]('test')\n        browser.login_page.click_log_in()\n        element_with_message = next((el for el in element.keys() if el != field_name), None)\n    \n        with allure.step('Проверить текст о незаполненности поля'):\n>           assert browser.login_page.is_element_have_property(element[element_with_message], 'validationMessage',\n                                                               'Заполните это поле.')\nE           AssertionError: assert False\nE            +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\nE            +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0>.is_element_have_property\nE            +      where <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0> = <python_test.model.niffler.Niffler object at 0x7f352d0b67b0>.login_page\n\ntest/test_auth.py:101: AssertionError",
    "steps" : [ {
      "name" : "Перейти на страницу авторизации Niffler",
      "time" : {
        "start" : 1750676764383,
        "stop" : 1750676764575,
        "duration" : 192
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Заполнить поле \"Имя пользователя\"",
      "time" : {
        "start" : 1750676764588,
        "stop" : 1750676764654,
        "duration" : 66
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user_name",
        "value" : "'test'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Нажать кнопку \"Log In\"",
      "time" : {
        "start" : 1750676764654,
        "stop" : 1750676764699,
        "duration" : 45
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить текст о незаполненности поля",
      "time" : {
        "start" : 1750676764699,
        "stop" : 1750676764715,
        "duration" : 16
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7f352c9686e0> = <python_test.model.niffler.Niffler object at 0x7f352d0b67b0>.login_page\n",
      "statusTrace" : "  File \"/home/runner/work/niffler-py-st3/niffler-py-st3/python_test/test/test_auth.py\", line 101, in test_required_field\n    assert browser.login_page.is_element_have_property(element[element_with_message], 'validationMessage',\n                                                       'Заполните это поле.')\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1750676764722,
      "stop" : 1750676764800,
      "duration" : 78
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Негативные сценарии"
  }, {
    "name" : "epic",
    "value" : "Приложение Niffler"
  }, {
    "name" : "feature",
    "value" : "Авторизация пользователя"
  }, {
    "name" : "host",
    "value" : "fv-az1931-926"
  }, {
    "name" : "thread",
    "value" : "7907-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_auth"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "field_name",
    "value" : "'user'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "e27b58514d34e51c",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/35/#testresult/e27b58514d34e51c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f09a45f17f0>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7f09a45f17f0> = <python_test.model.niffler.Niffler object at 0x7f09a45f0ad0>.login_page",
        "time" : {
          "start" : 1750672835912,
          "stop" : 1750672836530,
          "duration" : 618
        }
      }, {
        "uid" : "5084cc5a5f63df81",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/34/#testresult/5084cc5a5f63df81",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7ff9612cc590>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7ff9612cc590> = <python_test.model.niffler.Niffler object at 0x7ff9619ae660>.login_page",
        "time" : {
          "start" : 1750672138624,
          "stop" : 1750672139826,
          "duration" : 1202
        }
      }, {
        "uid" : "9b297be7f74f8aae",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/33/#testresult/9b297be7f74f8aae",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7fec5f3ed7f0>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7fec5f3ed7f0> = <python_test.model.niffler.Niffler object at 0x7fec5f3ecad0>.login_page",
        "time" : {
          "start" : 1750671178108,
          "stop" : 1750671178676,
          "duration" : 568
        }
      }, {
        "uid" : "be135507b5c86f10",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/32/#testresult/be135507b5c86f10",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f1b8a980590>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7f1b8a980590> = <python_test.model.niffler.Niffler object at 0x7f1b8b0c6660>.login_page",
        "time" : {
          "start" : 1750670907573,
          "stop" : 1750670908167,
          "duration" : 594
        }
      }, {
        "uid" : "ba1127321b1b534d",
        "reportUrl" : "https://shade1471.github.io/niffler-py-st3/31/#testresult/ba1127321b1b534d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False\n +  where False = is_element_have_property(('name', 'password'), 'validationMessage', 'Заполните это поле.')\n +    where is_element_have_property = <python_test.model.LoginPage.LoginPage object at 0x7f09289aac10>.is_element_have_property\n +      where <python_test.model.LoginPage.LoginPage object at 0x7f09289aac10> = <python_test.model.niffler.Niffler object at 0x7f0928be7110>.login_page",
        "time" : {
          "start" : 1750670596241,
          "stop" : 1750670597025,
          "duration" : 784
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c1f4fd806eb484fc.json",
  "parameterValues" : [ "'user'" ]
}